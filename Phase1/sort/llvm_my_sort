; ModuleID = 'my_sort.c'
source_filename = "my_sort.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@__const.main.my_array = private unnamed_addr constant [4 x i32] [i32 2, i32 1, i32 5, i32 3], align 16
@.str = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%d\09\00", align 1

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @sort(i32 %0, i32* nocapture %1) local_unnamed_addr #0 {
  %3 = icmp sgt i32 %0, 1
  br i1 %3, label %4, label %20

4:                                                ; preds = %2
  %5 = add nsw i32 %0, -1
  br label %6

6:                                                ; preds = %32, %4
  %7 = phi i32 [ 0, %4 ], [ %33, %32 ]
  %8 = xor i32 %7, -1
  %9 = add i32 %8, %0
  %10 = zext i32 %9 to i64
  %11 = xor i32 %7, -1
  %12 = add i32 %11, %0
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %32

14:                                               ; preds = %6
  %15 = load i32, i32* %1, align 4, !tbaa !2
  %16 = and i64 %10, 1
  %17 = icmp eq i32 %9, 1
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = sub nsw i64 %10, %16
  br label %35

20:                                               ; preds = %32, %2
  ret void

21:                                               ; preds = %53, %14
  %22 = phi i32 [ %15, %14 ], [ %54, %53 ]
  %23 = phi i64 [ 0, %14 ], [ %47, %53 ]
  %24 = icmp eq i64 %16, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %21
  %26 = add nuw nsw i64 %23, 1
  %27 = getelementptr inbounds i32, i32* %1, i64 %26
  %28 = load i32, i32* %27, align 4, !tbaa !2
  %29 = icmp sgt i32 %22, %28
  br i1 %29, label %30, label %32

30:                                               ; preds = %25
  %31 = getelementptr inbounds i32, i32* %1, i64 %23
  store i32 %28, i32* %31, align 4, !tbaa !2
  store i32 %22, i32* %27, align 4, !tbaa !2
  br label %32

32:                                               ; preds = %21, %25, %30, %6
  %33 = add nuw nsw i32 %7, 1
  %34 = icmp eq i32 %33, %5
  br i1 %34, label %20, label %6

35:                                               ; preds = %53, %18
  %36 = phi i32 [ %15, %18 ], [ %54, %53 ]
  %37 = phi i64 [ 0, %18 ], [ %47, %53 ]
  %38 = phi i64 [ %19, %18 ], [ %55, %53 ]
  %39 = or i64 %37, 1
  %40 = getelementptr inbounds i32, i32* %1, i64 %39
  %41 = load i32, i32* %40, align 4, !tbaa !2
  %42 = icmp sgt i32 %36, %41
  br i1 %42, label %43, label %45

43:                                               ; preds = %35
  %44 = getelementptr inbounds i32, i32* %1, i64 %37
  store i32 %41, i32* %44, align 4, !tbaa !2
  store i32 %36, i32* %40, align 4, !tbaa !2
  br label %45

45:                                               ; preds = %35, %43
  %46 = phi i32 [ %41, %35 ], [ %36, %43 ]
  %47 = add nuw nsw i64 %37, 2
  %48 = getelementptr inbounds i32, i32* %1, i64 %47
  %49 = load i32, i32* %48, align 4, !tbaa !2
  %50 = icmp sgt i32 %46, %49
  br i1 %50, label %51, label %53

51:                                               ; preds = %45
  %52 = getelementptr inbounds i32, i32* %1, i64 %39
  store i32 %49, i32* %52, align 4, !tbaa !2
  store i32 %46, i32* %48, align 4, !tbaa !2
  br label %53

53:                                               ; preds = %51, %45
  %54 = phi i32 [ %49, %45 ], [ %46, %51 ]
  %55 = add i64 %38, -2
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %21, label %35
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind uwtable
define dso_local void @my_sort(i32 %0, i32 %1, i32* nocapture %2, i32* nocapture readnone %3) local_unnamed_addr #0 {
  %5 = icmp sgt i32 %0, 1
  br i1 %5, label %6, label %52

6:                                                ; preds = %4
  %7 = add nsw i32 %0, -1
  br label %8

8:                                                ; preds = %33, %6
  %9 = phi i32 [ 0, %6 ], [ %34, %33 ]
  %10 = xor i32 %9, -1
  %11 = add i32 %10, %0
  %12 = zext i32 %11 to i64
  %13 = xor i32 %9, -1
  %14 = add i32 %13, %0
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %16, label %33

16:                                               ; preds = %8
  %17 = load i32, i32* %2, align 4, !tbaa !2
  %18 = and i64 %12, 1
  %19 = icmp eq i32 %11, 1
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  %21 = sub nsw i64 %12, %18
  br label %36

22:                                               ; preds = %55, %16
  %23 = phi i32 [ %17, %16 ], [ %56, %55 ]
  %24 = phi i64 [ 0, %16 ], [ %48, %55 ]
  %25 = icmp eq i64 %18, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %22
  %27 = add nuw nsw i64 %24, 1
  %28 = getelementptr inbounds i32, i32* %2, i64 %27
  %29 = load i32, i32* %28, align 4, !tbaa !2
  %30 = icmp sgt i32 %23, %29
  br i1 %30, label %31, label %33

31:                                               ; preds = %26
  %32 = getelementptr inbounds i32, i32* %2, i64 %24
  store i32 %29, i32* %32, align 4, !tbaa !2
  store i32 %23, i32* %28, align 4, !tbaa !2
  br label %33

33:                                               ; preds = %22, %26, %31, %8
  %34 = add nuw nsw i32 %9, 1
  %35 = icmp eq i32 %34, %7
  br i1 %35, label %52, label %8

36:                                               ; preds = %55, %20
  %37 = phi i32 [ %17, %20 ], [ %56, %55 ]
  %38 = phi i64 [ 0, %20 ], [ %48, %55 ]
  %39 = phi i64 [ %21, %20 ], [ %57, %55 ]
  %40 = or i64 %38, 1
  %41 = getelementptr inbounds i32, i32* %2, i64 %40
  %42 = load i32, i32* %41, align 4, !tbaa !2
  %43 = icmp sgt i32 %37, %42
  br i1 %43, label %44, label %46

44:                                               ; preds = %36
  %45 = getelementptr inbounds i32, i32* %2, i64 %38
  store i32 %42, i32* %45, align 4, !tbaa !2
  store i32 %37, i32* %41, align 4, !tbaa !2
  br label %46

46:                                               ; preds = %44, %36
  %47 = phi i32 [ %42, %36 ], [ %37, %44 ]
  %48 = add nuw nsw i64 %38, 2
  %49 = getelementptr inbounds i32, i32* %2, i64 %48
  %50 = load i32, i32* %49, align 4, !tbaa !2
  %51 = icmp sgt i32 %47, %50
  br i1 %51, label %53, label %55

52:                                               ; preds = %33, %4
  ret void

53:                                               ; preds = %46
  %54 = getelementptr inbounds i32, i32* %2, i64 %40
  store i32 %50, i32* %54, align 4, !tbaa !2
  store i32 %47, i32* %49, align 4, !tbaa !2
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %50, %46 ], [ %47, %53 ]
  %57 = add i64 %39, -2
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %22, label %36
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main() local_unnamed_addr #2 {
  %1 = alloca [4 x i32], align 16
  %2 = bitcast [4 x i32]* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 dereferenceable(16) %2, i8* nonnull align 16 dereferenceable(16) bitcast ([4 x i32]* @__const.main.my_array to i8*), i64 16, i1 false)
  %3 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i32 4)
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* %1, i64 0, i64 0
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* %1, i64 0, i64 1
  %6 = load i32, i32* %5, align 4, !tbaa !2
  %7 = icmp slt i32 %6, 2
  br i1 %7, label %8, label %10

8:                                                ; preds = %0
  %9 = getelementptr inbounds [4 x i32], [4 x i32]* %1, i64 0, i64 0
  store i32 %6, i32* %9, align 16, !tbaa !2
  store i32 2, i32* %5, align 4, !tbaa !2
  br label %10

10:                                               ; preds = %8, %0
  %11 = phi i32 [ %6, %0 ], [ 2, %8 ]
  %12 = getelementptr inbounds [4 x i32], [4 x i32]* %1, i64 0, i64 2
  %13 = load i32, i32* %12, align 8, !tbaa !2
  %14 = icmp sgt i32 %11, %13
  br i1 %14, label %44, label %46

15:                                               ; preds = %53
  %16 = getelementptr inbounds [4 x i32], [4 x i32]* %1, i64 0, i64 0
  store i32 %56, i32* %16, align 16, !tbaa !2
  store i32 %54, i32* %55, align 4, !tbaa !2
  br label %17

17:                                               ; preds = %15, %53
  %18 = phi i32 [ %56, %53 ], [ %54, %15 ]
  %19 = getelementptr inbounds [4 x i32], [4 x i32]* %1, i64 0, i64 2
  %20 = load i32, i32* %19, align 8, !tbaa !2
  %21 = icmp sgt i32 %18, %20
  br i1 %21, label %37, label %39

22:                                               ; preds = %39
  %23 = getelementptr inbounds [4 x i32], [4 x i32]* %1, i64 0, i64 0
  store i32 %42, i32* %23, align 16, !tbaa !2
  store i32 %40, i32* %41, align 4, !tbaa !2
  br label %24

24:                                               ; preds = %22, %39
  %25 = load i32, i32* %4, align 16, !tbaa !2
  %26 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i32 %25)
  %27 = getelementptr inbounds [4 x i32], [4 x i32]* %1, i64 0, i64 1
  %28 = load i32, i32* %27, align 4, !tbaa !2
  %29 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i32 %28)
  %30 = getelementptr inbounds [4 x i32], [4 x i32]* %1, i64 0, i64 2
  %31 = load i32, i32* %30, align 8, !tbaa !2
  %32 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i32 %31)
  %33 = getelementptr inbounds [4 x i32], [4 x i32]* %1, i64 0, i64 3
  %34 = load i32, i32* %33, align 4, !tbaa !2
  %35 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i32 %34)
  %36 = tail call i32 @putchar(i32 10)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #5
  ret i32 0

37:                                               ; preds = %17
  %38 = getelementptr inbounds [4 x i32], [4 x i32]* %1, i64 0, i64 1
  store i32 %20, i32* %38, align 4, !tbaa !2
  store i32 %18, i32* %19, align 8, !tbaa !2
  br label %39

39:                                               ; preds = %37, %17
  %40 = load i32, i32* %4, align 16, !tbaa !2
  %41 = getelementptr inbounds [4 x i32], [4 x i32]* %1, i64 0, i64 1
  %42 = load i32, i32* %41, align 4, !tbaa !2
  %43 = icmp sgt i32 %40, %42
  br i1 %43, label %22, label %24

44:                                               ; preds = %10
  %45 = getelementptr inbounds [4 x i32], [4 x i32]* %1, i64 0, i64 1
  store i32 %13, i32* %45, align 4, !tbaa !2
  store i32 %11, i32* %12, align 8, !tbaa !2
  br label %46

46:                                               ; preds = %44, %10
  %47 = phi i32 [ %13, %10 ], [ %11, %44 ]
  %48 = getelementptr inbounds [4 x i32], [4 x i32]* %1, i64 0, i64 3
  %49 = load i32, i32* %48, align 4, !tbaa !2
  %50 = icmp sgt i32 %47, %49
  br i1 %50, label %51, label %53

51:                                               ; preds = %46
  %52 = getelementptr inbounds [4 x i32], [4 x i32]* %1, i64 0, i64 2
  store i32 %49, i32* %52, align 8, !tbaa !2
  store i32 %47, i32* %48, align 4, !tbaa !2
  br label %53

53:                                               ; preds = %51, %46
  %54 = load i32, i32* %4, align 16, !tbaa !2
  %55 = getelementptr inbounds [4 x i32], [4 x i32]* %1, i64 0, i64 1
  %56 = load i32, i32* %55, align 4, !tbaa !2
  %57 = icmp sgt i32 %54, %56
  br i1 %57, label %15, label %17
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree nounwind
declare dso_local i32 @printf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @putchar(i32) local_unnamed_addr #4

attributes #0 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
